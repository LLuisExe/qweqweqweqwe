<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>